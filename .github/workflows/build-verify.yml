jobs:
  build-verify-package:
    environment: Build
    outputs:
      image-tag: ${{ steps.set-environment.outputs.IMAGE_TAG }}
      package-image: ${{ steps.set-environment.outputs.PACKAGE_IMAGE }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17 for x64
      uses: actions/setup-java@v4
      with:
        architecture: x64
        cache: maven
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      name: Build Java components
      run: mvn -B clean install
    - continue-on-error: true
      name: Build Angular app
      run: 'cd ${{github.workspace}}/webapp

        mvn -B -Pprod -DskipTests package

        '
    - continue-on-error: true
      name: Run Integration tests
      run: 'cd ${{github.workspace}}/webapp

        mvn -Pit test

        '
    - continue-on-error: true
      name: Verify Javadoc completion
      run: mvn -B javadoc:javadoc
    - continue-on-error: true
      id: set-environment
      name: Set environment for branch
      run: "set -x\nif [[ $GITHUB_REF == 'refs/heads/master' ]]; then\n  echo \"IMAGE_TAG=latest\"\
        \ >> \"$GITHUB_ENV\"\n  echo \"IMAGE_TAG=latest\" >> \"$GITHUB_OUTPUT\"\n\
        \  echo \"PACKAGE_IMAGE=true\" >> \"$GITHUB_ENV\"\n  echo \"PACKAGE_IMAGE=true\"\
        \ >> \"$GITHUB_OUTPUT\"\nelif [[ $GITHUB_REF == 'refs/heads/1.8.x' ]]; then\n\
        \  echo \"IMAGE_TAG=maintenance\" >> \"$GITHUB_ENV\"\n  echo \"IMAGE_TAG=maintenance\"\
        \ >> \"$GITHUB_OUTPUT\"\n  echo \"PACKAGE_IMAGE=true\" >> \"$GITHUB_ENV\"\n\
        \  echo \"PACKAGE_IMAGE=true\" >> \"$GITHUB_OUTPUT\"\nelif [[ $GITHUB_REF\
        \ == 'refs/heads/1.9.x' ]]; then\n  echo \"IMAGE_TAG=nightly\" >> \"$GITHUB_ENV\"\
        \n  echo \"IMAGE_TAG=nightly\" >> \"$GITHUB_OUTPUT\"\n  echo \"PACKAGE_IMAGE=true\"\
        \ >> \"$GITHUB_ENV\"\n  echo \"PACKAGE_IMAGE=true\" >> \"$GITHUB_OUTPUT\"\n\
        elif [[ $GITHUB_REF == \"refs/tags/$GITHUB_REF_NAME\" ]]; then\n  echo \"\
        IMAGE_TAG=$GITHUB_REF_NAME\" >> \"$GITHUB_ENV\"\n  echo \"IMAGE_TAG=$GITHUB_REF_NAME\"\
        \ >> \"$GITHUB_OUTPUT\"\n  echo \"PACKAGE_IMAGE=true\" >> \"$GITHUB_ENV\"\n\
        \  echo \"PACKAGE_IMAGE=true\" >> \"$GITHUB_OUTPUT\"\nelse\n  echo \"PACKAGE_IMAGE=false\"\
        \ >> \"$GITHUB_ENV\"\n  echo \"PACKAGE_IMAGE=false\" >> \"$GITHUB_OUTPUT\"\
        \nfi\n"
    - continue-on-error: true
      if: github.repository_owner == 'microcks' && env.PACKAGE_IMAGE == 'true'
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - continue-on-error: true
      if: github.repository_owner == 'microcks' && env.PACKAGE_IMAGE == 'true'
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - continue-on-error: true
      if: github.repository_owner == 'microcks' && env.PACKAGE_IMAGE == 'true'
      name: Login to Quay.io and Docker Hub registries and setup multi-arch builder
      run: 'echo ${{ secrets.QUAY_PASSWORD }} | docker login -u ${{ secrets.QUAY_USERNAME
        }} --password-stdin quay.io

        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME
        }} --password-stdin docker.io

        BUILDER=buildx-multi-arch

        docker buildx inspect $BUILDER || docker buildx create --name=$BUILDER --driver=docker-container
        --driver-opt=network=host

        '
    - continue-on-error: true
      if: github.repository_owner == 'microcks' && env.PACKAGE_IMAGE == 'true'
      name: Build and push container image for webapp
      run: "cd ${{github.workspace}}/webapp\nmvn -B -q -Pprod -DskipTests install\n\
        #docker build -f src/main/docker/Dockerfile -t quay.io/microcks/microcks:$IMAGE_TAG\
        \ .\ndocker buildx build --push \\\n  --platform=linux/amd64,linux/arm64 \\\
        \n  --builder=buildx-multi-arch \\\n  --provenance=false \\\n  --build-arg\
        \ TAG=$IMAGE_TAG \\\n  --file src/main/docker/Dockerfile \\\n  --tag=quay.io/microcks/microcks:$IMAGE_TAG\
        \ \\\n  --tag=docker.io/microcks/microcks:$IMAGE_TAG .\n"
    - continue-on-error: true
      if: github.repository_owner == 'microcks' && env.PACKAGE_IMAGE == 'true'
      name: Build and push container for async minion
      run: "cd ${{github.workspace}}/minions/async\nmvn -B -q -DskipTests -Dquarkus.package.type=legacy-jar\
        \ package\n#docker build -f src/main/docker/Dockerfile.jvm -t quay.io/microcks/microcks-async-minion:$IMAGE_TAG\
        \ .\ndocker buildx build --push \\\n  --platform=linux/amd64,linux/arm64 \\\
        \n  --builder=buildx-multi-arch \\\n  --provenance=false \\\n  --build-arg\
        \ TAG=$IMAGE_TAG \\\n  --file src/main/docker/Dockerfile.legacy-jar \\\n \
        \ --tag=quay.io/microcks/microcks-async-minion:$IMAGE_TAG \\\n  --tag=docker.io/microcks/microcks-async-minion:$IMAGE_TAG\
        \ .\n"
    - continue-on-error: true
      if: github.repository_owner == 'microcks' && env.PACKAGE_IMAGE == 'true'
      name: Build and push container image for uber distro
      run: "cd ${{github.workspace}}/distro/uber\nmvn -B -q -Pprod -DskipTests package\n\
        docker buildx build --push \\\n  --platform=linux/amd64,linux/arm64 \\\n \
        \ --builder=buildx-multi-arch \\\n  --provenance=false \\\n  --build-arg TAG=$IMAGE_TAG\
        \ \\\n  --file src/main/docker/Dockerfile \\\n  --tag=quay.io/microcks/microcks-uber:$IMAGE_TAG\
        \ \\\n  --tag=docker.io/microcks/microcks-uber:$IMAGE_TAG .\n"
    - continue-on-error: true
      if: github.repository_owner == 'microcks' && env.PACKAGE_IMAGE == 'true'
      name: Build and push container for async minion in uber distro
      run: "cd ${{github.workspace}}/distro/uber-async-minion\nmvn -B -q -DskipTests\
        \ package\n#docker build -f src/main/docker/Dockerfile.jvm -t quay.io/microcks/microcks-user-async-minion:$IMAGE_TAG\
        \ .\ndocker buildx build --push \\\n  --platform=linux/amd64,linux/arm64 \\\
        \n  --builder=buildx-multi-arch \\\n  --provenance=false \\\n  --build-arg\
        \ TAG=$IMAGE_TAG \\\n  --file src/main/docker/Dockerfile.jvm \\\n  --tag=quay.io/microcks/microcks-uber-async-minion:$IMAGE_TAG\
        \ \\\n  --tag=docker.io/microcks/microcks-uber-async-minion:$IMAGE_TAG .\n"
  call-package-native:
    if: github.repository_owner == 'microcks' && ${{ needs.build-verify-package.outputs.package-image
      }} == 'true'
    needs: build-verify-package
    secrets: inherit
    uses: ./.github/workflows/package-native.yml
    with:
      image-tag: ${{ needs.build-verify-package.outputs.image-tag }}
name: build-verify-package
on:
  repository_dispatch:
    types: trigger-ga___build-verify.yml
